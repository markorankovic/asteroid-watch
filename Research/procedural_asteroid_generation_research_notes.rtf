{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc\partightenfactor0

\f0\fs48 \cf0 Comments on the research material\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\fs24 \cf0 \
[1] Interested me for the diagrams on page 33 which shows from a-e that no matter how many points are used in procedurally generating a polygon, there is a way to arrange them such that neither of the lines that connect them all will intersect one another. This might be interesting for my asteroid generation, which will involve not only creating the rock polygon, but then also including craters which should not collide with one another, and most importantly should not intersect the rock boundaries.}